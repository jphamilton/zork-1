using Zork1.Handlers;
using Zork1.Library;
using Zork1.Library.Parsing;

namespace Zork1;
public class ZorkSyntax : SyntaxBase
{
    public override SyntaxDefinitons Load()
    {
        Synonyms.Begin()
            // preps
            .Add("inside/into/onto", "in")
            .Add("outside", "out")
            .Add("underneath/beneath/below", "under")
            .Add("using/through/thru", "with")
            // verbs
            .Add("again", "g")
            .Add("attach/fasten/secure", "tie")
            .Add("awake/startle/surprise", "wake")
            .Add("begone/cast/drive/exorcise", "banish")
            .Add("carry/catch/get/grab/hold/remove", "take")
            .Add("chuck/hurl/toss", "throw")
            .Add("pierce/slice", "cut")
            .Add("describe/what/whats", "examine")
            .Add("donate/feed/offer/hand", "give")
            .Add("fight/hit/hurt/injure", "attack")
            .Add("flip/set/shut", "turn")
            .Add("free/unattach/unfasten/unhook", "untie")
            .Add("gaze/l/stare", "look")
            .Add("hide/insert/place/stuff", "put")
            .Add("ignite/incinerate", "burn")
            .Add("inventory/inv", "i")
            .Add("jump/leap", "dive")
            .Add("proceed/run/step/walk", "go")
            .Add("murder/dispatch/slay", "kill")
            .Add("release", "drop")
            .Add("repair/plug/patch/glue", "fix")
            .Add("reply", "answer")
            .Add("see/seek/where", "find")
            .Add("sit", "climb")
            .Add("skim", "read")
            .Add("taunt", "kick")
            .Add("feel/pat/pet/rub", "touch")
        .End();

        // Some helper shortcuts

        List<int> HCRG = [HELD, CARRIED, INROOM, ONGROUND];

        var ANIMATE = OBJECT(o => o.Animate, INROOM, ONGROUND);
        var CLIMABLE = OBJECT(o => o.Climable, INROOM, ONGROUND);
        var FLAME = OBJECT(o => o.Flame, HELD, CARRIED, INROOM, ONGROUND, HAVE);
        var FLAMMABLE = OBJECT(o => o.Flammable, HELD, CARRIED, INROOM, ONGROUND);
        var HAS_MANY = OBJECT(HELD, MANY, HAVE);
        var READABLE = OBJECT(o => o.Readable, HELD, CARRIED, INROOM, ONGROUND, TAKE);
        var SWITCHABLE = OBJECT(o => o.Switchable, HELD, CARRIED, INROOM, ONGROUND, TAKE);
        var VEHICLE = OBJECT(o => o.Vehicle, INROOM, ONGROUND);

        // The Syntax!

        return SyntaxDefinitons.Begin()
            .Verb("north").Add<North>()
            .Verb("south").Add<South>()
            .Verb("east").Add<East>()
            .Verb("west").Add<West>()
            .Verb("northeast").Add<Northeast>()
            .Verb("southeast").Add<Southeast>()
            .Verb("southwest").Add<Southwest>()
            .Verb("northwest").Add<Northwest>()
            .Verb("up").Add<Up>()
            .Verb("down").Add<Down>()
            .Verb("in").Add<Enter>()
            .Verb("out").Add<Exit>()
            .Verb("land").Add<Land>()

            .Verb("i/inventory").Add<Inventory>()
            .Verb("quit").Add<Quit>()
            .Verb("restart").Add<Restart>()
            .Verb("restore").Add<Restore>()
            .Verb("save").Add<Save>()
            .Verb("script").Add<Script>() // not implemented
            .Verb("unscript").Add<Unscript>() // not implemented
            .Verb("version").Add<Version>()
            .Verb("$ve").Add<Verify>()
            .Verb("debug").Add<Debug>()
            .Verb("g").Add<Again>()

            .Verb("activate").Add<SwitchOn>(OBJECT(o => o.On, HCRG))
            .Verb("answer")
                .Add<Answer>(OBJECT())
                .Add<Answer>()
            .Verb("apply").Add<Insert>(OBJECT(), "to", OBJECT())
            .Verb("attack")
                .Add<Attack>(ANIMATE, "with", OBJECT(o => o.Weapon, HELD, CARRIED, HAVE))
            .Verb("ask/tell")
                .Add<TalkTo>(OBJECT(o => o.Animate, INROOM))
            .Verb("back").Add<Back>()
            .Verb("banish")
                .Add<Banish>("away/out", OBJECT(o => o.Animate))
                .Add<Banish>(OBJECT())
            .Verb("barf/chomp/lose")
                .Add<Vomit>()
            .Verb("blast").Add<BlowUp>()
            .Verb("blow")
                .Add<BlowIn>("in", OBJECT())
                .Add<BlowUp>("up", OBJECT())
                .Add<Inflate>("up", OBJECT(), "with", OBJECT(o => o.Tool, HCRG))
                .Add<SwitchOff>("out", OBJECT())
            .Verb("board")
                .Add<Board>(VEHICLE)
            .Verb("brief")
                .Add<Brief>()
            .Verb("brush/clean")
                .Add<Brush>(OBJECT(HCRG), "with", OBJECT())
                .Add<Brush>(OBJECT(HCRG))
            .Verb("bug")
                .Add<Bug>()
            .Verb("burn")
                .Add<Burn>("down", FLAMMABLE, "with", FLAME)
                .Add<Burn>(FLAMMABLE, "with", FLAME)
            .Verb("chant/incant")
                .Add<Chant>()
            .Verb("climb")
                .Add<Enter>("with", OBJECT())
                .Add<ClimbOn>("on", VEHICLE)
                .Add<Board>("in", VEHICLE)
                .Add<Climb>(CLIMABLE)
                .Add<ClimbDown>("down", CLIMABLE)
                .Add<ClimbUp>("up", CLIMABLE)
                .Add<Down>("down")
                .Add<Up>("up")
            .Verb("close")
                .Add<Close>(OBJECT(o => o.Door, HCRG))
            .Verb("command")
                .Add<Handlers.Command>(OBJECT(o => o.Animate))
            .Verb("cross/ford")
                .Add<Cross>(OBJECT())
            .Verb("count").Add<Count>(OBJECT())
            .Verb("curse/damn/fuck/shit")
                .Add<Curse>(OBJECT(o => o.Animate))
                .Add<Curse>()
            .Verb("cut")
                .Add<Cut>(OBJECT(), "with", OBJECT(o => o.Weapon, HELD, CARRIED))
            .Verb("diagnose/health")
                .Add<Diagnose>()
            .Verb("deflate")
                .Add<Deflate>(OBJECT())
            .Verb("destroy/block/break/damage/smash")
                .Add<Open>("into", OBJECT(HCRG))
                .Add<Poke>("down", OBJECT(HCRG), "with", OBJECT(HELD, CARRIED, TAKE))
                .Add<Poke>(OBJECT(HCRG), "with", OBJECT(HELD, CARRIED, TAKE))
                .Add<Poke>(OBJECT(HCRG))
            .Verb("dig")
                .Add<Dig>("in", OBJECT(INROOM, ONGROUND), "with", OBJECT(o => o.Tool, HELD, CARRIED, HAVE))
                .Add<Dig>(OBJECT(INROOM, ONGROUND), "with", OBJECT(o => o.Tool, HELD, CARRIED, HAVE))
                .Add<Dig>("in", OBJECT(INROOM, ONGROUND))
            .Verb("disembark")
                .Add<Disembark>(OBJECT(o => o.Vehicle, INROOM, ONGROUND))
            .Verb("disenchant")
                .Add<Disenchant>(OBJECT())
            .Verb("dive")
                .Add<Dive>("off/from/in/across/over", OBJECT())
                .Add<Dive>()
            .Verb("douse/extinguish")
                .Add<SwitchOff>(OBJECT(o => o.Switchable, HELD, CARRIED, INROOM, ONGROUND, TAKE, HAVE))
            .Verb("drink/imbibe/swallow")
                .Add<DrinkFrom>("from", OBJECT(HELD, CARRIED))
                .Add<Drink>(OBJECT(o => o.Drinkable, HCRG))
            .Verb("drop")
                .Add<PutOn>(HAS_MANY, "on", OBJECT())
                .Add<Insert>(HAS_MANY, "in/down", OBJECT())
                .Add<Drop>(HAS_MANY)
            .Verb("eat/bite/consume/taste")
                .Add<Eat>(OBJECT(o => o.Edible, HELD, CARRIED, INROOM, ONGROUND, TAKE))
            .Verb("echo")
                .Add<Echo>()
            .Verb("enchant")
                .Add<Enchant>(OBJECT(INROOM, ONGROUND))
            .Verb("enter")
                .Add<Enter>(OBJECT())
                .Add<Enter>()
            .Verb("exit")
                .Add<Exit>(OBJECT())
                .Add<Disembark>(VEHICLE)
                .Add<Exit>()
            .Verb("examine")
                .Add<LookIn>("in/on", OBJECT(HELD, CARRIED, INROOM, ONGROUND, MANY))
                .Add<Examine>(OBJECT(MANY))
            .Verb("fill")
                .Add<Fill>(OBJECT(o => o.Container, HCRG))
                .Add<Fill>(OBJECT(o => o.Container, HCRG), "with", OBJECT())
            .Verb("find")
                .Add<Find>(OBJECT())
            .Verb("fix")
                .Add<Fix>(OBJECT(), "with", OBJECT())
            .Verb("follow")
                .Add<Follow>(OBJECT())
                .Add<Follow>()
            .Verb("frobozz")
                .Add<Frobozz>()
            .Verb("give")
                .Add<Give>(OBJECT(o => o.Animate, ONGROUND), OBJECT(HELD, MANY, HAVE))
                .Add<Give>(OBJECT(HELD, MANY, HAVE), "to", OBJECT(o => o.Animate, ONGROUND))
            .Verb("go")
                .Add<ClimbDown>("down", OBJECT(o => o.Climable, INROOM, ONGROUND))
                .Add<ClimbUp>("up", OBJECT(o => o.Climable, INROOM, ONGROUND))
                .Add<WalkAround>("around", OBJECT())
                .Add<WalkTo>("to", OBJECT())
                .Add<Dive>("over", OBJECT())
                .Add<Enter>("on/with/in", OBJECT())
                .Add<Enter>("out", OBJECT())
                .Add<Go>("away", OBJECT())
                .Add<Go>(OBJECT())
            .Verb("gonear")
                .Add<GoNear>()
            .Verb("grease/lubricate/oil")
                .Add<Grease>(OBJECT(), "with", OBJECT(HELD, CARRIED))
            .Verb("hatch")
                .Add<Hatch>(OBJECT())
            .Verb("hello/hi")
                .Add<Hello>()
                .Add<Hello>(OBJECT())
            .Verb("hop/skip")
                .Add<Jump>()
            .Verb("inflate")
                .Add<Inflate>(OBJECT(), "with", OBJECT(o => o.Tool, HELD, CARRIED, INROOM, ONGROUND))
            .Verb("kick")
                .Add<Kick>(OBJECT(INROOM, ONGROUND))
            .Verb("kill")
                .Add<Attack>(ANIMATE, "with", OBJECT(o => o.Weapon, HELD, CARRIED, HAVE))
            .Verb("kiss")
                .Add<Kiss>(ANIMATE)
            .Verb("knock/rap")
                .Add<Attack>("down", ANIMATE)
                .Add<Knock>("on/at", OBJECT())
            .Verb("launch")
                .Add<Launch>(VEHICLE)
            .Verb("lean")
                .Add<LeanOn>("on", OBJECT(HELD, HAVE))
            .Verb("leave")
                .Add<Exit>()
                .Add<Disembark>(OBJECT(o => o.Vehicle, INROOM, ONGROUND))
                .Add<Drop>(HAS_MANY)
            .Verb("lift/raise")
                .Add<Raise>("up", OBJECT())
                .Add<Raise>(OBJECT())
            .Verb("light")
                .Add<Burn>(OBJECT(o => o.Switchable, HELD, CARRIED, INROOM, ONGROUND), "with", OBJECT(o => o.Flame, HELD, CARRIED, TAKE, HAVE))
                .Add<SwitchOn>(OBJECT(o => o.Switchable, HELD, CARRIED, INROOM, ONGROUND, TAKE, HAVE))
            .Verb("listen")
                .Add<Listen>("for/to", OBJECT())
            .Verb("lock")
                .Add<Lock>(OBJECT(INROOM, ONGROUND), "with", OBJECT(o => o.Tool, HELD, CARRIED, INROOM, ONGROUND, TAKE))
            .Verb("look")
                .Add<Find>("for", OBJECT())
                .Add<Read>("at", OBJECT(HCRG), "with", OBJECT())
                .Add<LookIn>("in", OBJECT(HELD, CARRIED, INROOM, ONGROUND, MANY))
                .Add<LookBehind>("behind", OBJECT())
                .Add<LookUnder>("under", OBJECT())
                .Add<LookIn>("with", OBJECT(HELD, CARRIED, INROOM, ONGROUND, MANY))
                .Add<LookOn>("on", OBJECT())
                .Add<Examine>("at", OBJECT(HELD, CARRIED, INROOM, ONGROUND, MANY))
                .Add<Look>("down/up/around", OBJECT())
                .Add<Look>()
            .Verb("lower")
                .Add<Lower>(OBJECT())
            .Verb("make")
                .Add<Make>(OBJECT())
            .Verb("melt")
                .Add<Melt>(OBJECT(), "with", OBJECT(o => o.Flame, HCRG))
            .Verb("molest/rape")
                .Add<Molest>(ANIMATE)
            .Verb("move")
                .Add<MoveWith>(OBJECT(), "with", OBJECT(o => o.Tool))
                .Add<Insert>(OBJECT(HELD, MANY, HAVE), "in", OBJECT())
                .Add<Move>(OBJECT(INROOM, ONGROUND))
            .Verb("mumble/sigh")
                .Add<Mumble>()
            .Verb("odysseus/ulysses")
                .Add<Odysseus>()
            .Verb("open")
                .Add<Open>(OBJECT(o => o.Door, HCRG), "with", OBJECT(o => o.Tool, HELD, CARRIED, INROOM, ONGROUND, HAVE))
                .Add<Open>("up", OBJECT(o => o.Door, HCRG))
                .Add<Open>(OBJECT(o => o.Door, HCRG))
            .Verb("pick")
                .Add<Take>("up", OBJECT(o => o.Takeable, ONGROUND, MANY))
                .Add<Pick>(OBJECT(), "with", OBJECT())
                .Add<Pick>(OBJECT())
            .Verb("play")
                .Add<Play>(OBJECT())
            .Verb("plugh/xyzzy")
                .Add<Plugh>()
            .Verb("poke/puncture")
                .Add<Poke>(ANIMATE, "with", OBJECT(o => o.Weapon, HELD, CARRIED, HAVE))
            .Verb("pour/spill")
                .Add<Drop>(OBJECT(HELD, CARRIED), "from", OBJECT())
                .Add<Pour>(OBJECT(HELD, CARRIED), "on", OBJECT())
                .Add<Drop>(OBJECT(HELD, CARRIED), "in", OBJECT())
                .Add<Drop>(OBJECT(HELD, CARRIED))
            .Verb("pray")
                .Add<Pray>()
            .Verb("pull/tug/yank")
                .Add<Move>("up/on", OBJECT(INROOM, ONGROUND))
                .Add<Move>(OBJECT(INROOM, ONGROUND))
            .Verb("pump")
                .Add<PumpUp>("up", OBJECT(), "with", OBJECT())
                .Add<PumpUp>("up", OBJECT())
            .Verb("purloin")
                .Add<Purloin>()
            .Verb("push/press")
                .Add<PutUnder>(OBJECT(), "under", OBJECT())
                .Add<MoveWith>(OBJECT(), "with", OBJECT(o => o.Tool))
                .Add<Push>("on", OBJECT(INROOM, ONGROUND, MANY))
                .Add<Push>(OBJECT(INROOM, ONGROUND, MANY))
                .Add<Slide>(OBJECT(INROOM, ONGROUND), "to", OBJECT())
                .Add<Slide>(OBJECT(INROOM, ONGROUND, MANY), OBJECT()) // parser won't handle this
            .Verb("put")
                .Add<PutBehind>(OBJECT(CARRIED, HELD, HAVE), "behind", OBJECT())
                .Add<Wear>("on", OBJECT(HELD, CARRIED, INROOM, ONGROUND, MANY))
                .Add<SwitchOff>("out", OBJECT(HELD, CARRIED, INROOM, ONGROUND, TAKE, HAVE))
                .Add<PutUnder>(OBJECT(HELD, HAVE), "under", OBJECT())
                .Add<Drop>("down", OBJECT(HELD, MANY))
                .Add<PutOn>(HAS_MANY, "on", OBJECT())
                .Add<Insert>(HAS_MANY, "in", OBJECT())
            .Verb("read")
                .Add<Read>(READABLE, OBJECT())
                .Add<Read>(READABLE, "with", OBJECT())
                .Add<Read>("from", READABLE)
                .Add<Read>(READABLE)
            .Verb("repent")
                .Add<Repent>()
            .Verb("replay")
                .Add<Replay>()
            .Verb("ring/peal")
                .Add<Ring>(OBJECT(TAKE), "with", OBJECT())
                .Add<Ring>(OBJECT(TAKE))
            .Verb("roll")
                .Add<Move>("up", OBJECT(INROOM, ONGROUND))
            .Verb("say")
                .Add<Say>()
            .Verb("score")
                .Add<Score>()
            .Verb("search")
                .Add<Find>("for", OBJECT())
                .Add<Search>("in", OBJECT())
                .Add<Search>(OBJECT())
            .Verb("send")
                .Add<SendFor>(OBJECT())
            .Verb("shake")
                .Add<Shake>(OBJECT())
            .Verb("slide")
                .Add<Slide>(OBJECT(INROOM, ONGROUND), "to", OBJECT())
                .Add<PutUnder>(OBJECT(), "under", OBJECT())
            .Verb("smell/sniff")
                .Add<Smell>(OBJECT())
            .Verb("spin")
                .Add<Spin>(OBJECT())
            .Verb("spray")
                .Add<SprayWith>(OBJECT(), "with", OBJECT())
                .Add<SprayOn>(OBJECT(), "on", OBJECT())
            .Verb("squeeze")
                .Add<Insert>(OBJECT(), "on", OBJECT())
                .Add<Squeeze>(OBJECT())
            .Verb("stab")
                .Add<Attack>(ANIMATE, "with", OBJECT(o => o.Weapon, HELD, CARRIED, HAVE))
                .Add<Stab>(ANIMATE)
            .Verb("stand")
                .Add<Stand>("up")
                .Add<Stand>()
            .Verb("stay")
                .Add<Stay>()
            .Verb("strike")
                .Add<Strike>(OBJECT(HCRG))
                .Add<Attack>(ANIMATE, "with", OBJECT(o => o.Weapon, HELD, CARRIED, INROOM, ONGROUND, HAVE))
            .Verb("superbrief")
                .Add<Superbrief>()
            .Verb("swim/bathe/wade")
                .Add<Swim>("in", OBJECT())
                .Add<Swim>()
            .Verb("swing/thrust")
                .Add<Swing>(OBJECT(o => o.Weapon, HELD, CARRIED, HAVE), "at", ANIMATE)
                .Add<Swing>(OBJECT(o => o.Weapon, HELD, CARRIED, HAVE))
            .Verb("take")
                .Add<Take>(OBJECT(o => o.Takeable, CARRIED, INROOM, MANY), "from/off/out", OBJECT())
                .Add<Stand>("up", OBJECT())
                .Add<ClimbOn>("on", VEHICLE)
                .Add<Disembark>("out", VEHICLE)
                .Add<Board>("in", VEHICLE)
                .Add<Take>(OBJECT(o => o.Takeable, INROOM, ONGROUND, MANY))
            .Verb("talk")
                .Add<TalkTo>("to", ANIMATE)
            .Verb("tell/ask")
                .Add<TalkTo>(ANIMATE)
            .Verb("temple/treasure")
                .Add<TempleWord>()
            .Verb("throw")
                .Add<ThrowOver>(OBJECT(HELD, CARRIED, HAVE), "over/off", OBJECT())
                .Add<PutOn>(OBJECT(HELD, CARRIED, HAVE), "on", OBJECT())
                .Add<Insert>(OBJECT(HELD, CARRIED, HAVE), "into", OBJECT())
                .Add<ThrowTo>(OBJECT(), "to", OBJECT())
                .Add<Throw>(OBJECT(HELD, CARRIED, HAVE), "at/with", ANIMATE)
                .Add<Throw>(OBJECT(HELD, CARRIED, HAVE))
            .Verb("tie")
                .Add<TieWith>("up", ANIMATE, "with", OBJECT(o => o.Tool, HELD, CARRIED, INROOM, ONGROUND, TAKE))
                .Add<TieTo>(OBJECT(), "to", OBJECT())
            .Verb("touch")
                .Add<Touch>(OBJECT(), "with", OBJECT())
                .Add<Touch>(OBJECT())
            .Verb("turn")
                .Add<MoveWith>(OBJECT(o => o.Turnable), "for/to", OBJECT())
                .Add<MoveWith>(OBJECT(o => o.Turnable))
                .Add<SwitchOff>("off", OBJECT(HELD, CARRIED, INROOM, ONGROUND, TAKE, HAVE))
                .Add<SwitchOn>("on", SWITCHABLE, "with", OBJECT(HAVE))
                .Add<SwitchOn>("on", SWITCHABLE)
                .Add<MoveWith>(OBJECT(o => o.Turnable, HCRG), "with", OBJECT(o => o.Tool, HELD, CARRIED, INROOM, ONGROUND, HAVE))
            .Verb("unlock")
                .Add<Unlock>(OBJECT(INROOM, ONGROUND), "with", OBJECT(o => o.Tool, HELD, CARRIED, INROOM, ONGROUND, TAKE))
            .Verb("untie")
                .Add<Untie>(OBJECT(HCRG), "from", OBJECT())
                .Add<Untie>(OBJECT(HCRG))
            .Verb("verbose")
                .Add<Verbose>()
            .Verb("wait/z")
                .Add<Wait>()
            .Verb("wake")
                .Add<Wake>("up", ANIMATE)
                .Add<Wake>(ANIMATE)
            .Verb("wave/brandish")
                .Add<Wield>(OBJECT(HELD, CARRIED, TAKE, HAVE), "at", OBJECT())
                .Add<Wield>(OBJECT(HELD, CARRIED, TAKE, HAVE))
            .Verb("wear")
                .Add<Wear>(OBJECT())
            .Verb("win/winnage")
                .Add<Win>()
            .Verb("wind")
                .Add<WindUp>("up", OBJECT())
                .Add<WindUp>(OBJECT())
            .Verb("wish")
                .Add<Wish>()
            .Verb("yell/scream/shout")
                .Add<Yell>()
            .Verb("zork")
                .Add<Zork>()
            .End();
    }
}
